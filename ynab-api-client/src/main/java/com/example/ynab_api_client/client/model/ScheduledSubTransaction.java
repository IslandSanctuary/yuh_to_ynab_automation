/*
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.75.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ynab_api_client.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.example.ynab_api_client.client.invoker.ApiClient;
/**
 * ScheduledSubTransaction
 */
@JsonPropertyOrder({
  ScheduledSubTransaction.JSON_PROPERTY_ID,
  ScheduledSubTransaction.JSON_PROPERTY_SCHEDULED_TRANSACTION_ID,
  ScheduledSubTransaction.JSON_PROPERTY_AMOUNT,
  ScheduledSubTransaction.JSON_PROPERTY_MEMO,
  ScheduledSubTransaction.JSON_PROPERTY_PAYEE_ID,
  ScheduledSubTransaction.JSON_PROPERTY_PAYEE_NAME,
  ScheduledSubTransaction.JSON_PROPERTY_CATEGORY_ID,
  ScheduledSubTransaction.JSON_PROPERTY_CATEGORY_NAME,
  ScheduledSubTransaction.JSON_PROPERTY_TRANSFER_ACCOUNT_ID,
  ScheduledSubTransaction.JSON_PROPERTY_DELETED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-01T21:45:22.500220+02:00[Europe/Zurich]", comments = "Generator version: 7.14.0")
public class ScheduledSubTransaction {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_SCHEDULED_TRANSACTION_ID = "scheduled_transaction_id";
  @jakarta.annotation.Nonnull
  private UUID scheduledTransactionId;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @jakarta.annotation.Nonnull
  private Long amount;

  public static final String JSON_PROPERTY_MEMO = "memo";
  private JsonNullable<String> memo = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PAYEE_ID = "payee_id";
  private JsonNullable<UUID> payeeId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_PAYEE_NAME = "payee_name";
  private JsonNullable<String> payeeName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CATEGORY_ID = "category_id";
  private JsonNullable<UUID> categoryId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_CATEGORY_NAME = "category_name";
  private JsonNullable<String> categoryName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TRANSFER_ACCOUNT_ID = "transfer_account_id";
  private JsonNullable<UUID> transferAccountId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_DELETED = "deleted";
  @jakarta.annotation.Nonnull
  private Boolean deleted;

  public ScheduledSubTransaction() { 
  }

  public ScheduledSubTransaction id(@jakarta.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public ScheduledSubTransaction scheduledTransactionId(@jakarta.annotation.Nonnull UUID scheduledTransactionId) {
    this.scheduledTransactionId = scheduledTransactionId;
    return this;
  }

  /**
   * Get scheduledTransactionId
   * @return scheduledTransactionId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SCHEDULED_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getScheduledTransactionId() {
    return scheduledTransactionId;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULED_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setScheduledTransactionId(@jakarta.annotation.Nonnull UUID scheduledTransactionId) {
    this.scheduledTransactionId = scheduledTransactionId;
  }


  public ScheduledSubTransaction amount(@jakarta.annotation.Nonnull Long amount) {
    this.amount = amount;
    return this;
  }

  /**
   * The scheduled subtransaction amount in milliunits format
   * @return amount
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Long getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(@jakarta.annotation.Nonnull Long amount) {
    this.amount = amount;
  }


  public ScheduledSubTransaction memo(@jakarta.annotation.Nullable String memo) {
    this.memo = JsonNullable.<String>of(memo);
    return this;
  }

  /**
   * Get memo
   * @return memo
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getMemo() {
        return memo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MEMO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMemo_JsonNullable() {
    return memo;
  }
  
  @JsonProperty(JSON_PROPERTY_MEMO)
  public void setMemo_JsonNullable(JsonNullable<String> memo) {
    this.memo = memo;
  }

  public void setMemo(@jakarta.annotation.Nullable String memo) {
    this.memo = JsonNullable.<String>of(memo);
  }


  public ScheduledSubTransaction payeeId(@jakarta.annotation.Nullable UUID payeeId) {
    this.payeeId = JsonNullable.<UUID>of(payeeId);
    return this;
  }

  /**
   * Get payeeId
   * @return payeeId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public UUID getPayeeId() {
        return payeeId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYEE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getPayeeId_JsonNullable() {
    return payeeId;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYEE_ID)
  public void setPayeeId_JsonNullable(JsonNullable<UUID> payeeId) {
    this.payeeId = payeeId;
  }

  public void setPayeeId(@jakarta.annotation.Nullable UUID payeeId) {
    this.payeeId = JsonNullable.<UUID>of(payeeId);
  }


  public ScheduledSubTransaction payeeName(@jakarta.annotation.Nullable String payeeName) {
    this.payeeName = JsonNullable.<String>of(payeeName);
    return this;
  }

  /**
   * Get payeeName
   * @return payeeName
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getPayeeName() {
        return payeeName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYEE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPayeeName_JsonNullable() {
    return payeeName;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYEE_NAME)
  public void setPayeeName_JsonNullable(JsonNullable<String> payeeName) {
    this.payeeName = payeeName;
  }

  public void setPayeeName(@jakarta.annotation.Nullable String payeeName) {
    this.payeeName = JsonNullable.<String>of(payeeName);
  }


  public ScheduledSubTransaction categoryId(@jakarta.annotation.Nullable UUID categoryId) {
    this.categoryId = JsonNullable.<UUID>of(categoryId);
    return this;
  }

  /**
   * Get categoryId
   * @return categoryId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public UUID getCategoryId() {
        return categoryId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CATEGORY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getCategoryId_JsonNullable() {
    return categoryId;
  }
  
  @JsonProperty(JSON_PROPERTY_CATEGORY_ID)
  public void setCategoryId_JsonNullable(JsonNullable<UUID> categoryId) {
    this.categoryId = categoryId;
  }

  public void setCategoryId(@jakarta.annotation.Nullable UUID categoryId) {
    this.categoryId = JsonNullable.<UUID>of(categoryId);
  }


  public ScheduledSubTransaction categoryName(@jakarta.annotation.Nullable String categoryName) {
    this.categoryName = JsonNullable.<String>of(categoryName);
    return this;
  }

  /**
   * Get categoryName
   * @return categoryName
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getCategoryName() {
        return categoryName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CATEGORY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCategoryName_JsonNullable() {
    return categoryName;
  }
  
  @JsonProperty(JSON_PROPERTY_CATEGORY_NAME)
  public void setCategoryName_JsonNullable(JsonNullable<String> categoryName) {
    this.categoryName = categoryName;
  }

  public void setCategoryName(@jakarta.annotation.Nullable String categoryName) {
    this.categoryName = JsonNullable.<String>of(categoryName);
  }


  public ScheduledSubTransaction transferAccountId(@jakarta.annotation.Nullable UUID transferAccountId) {
    this.transferAccountId = JsonNullable.<UUID>of(transferAccountId);
    return this;
  }

  /**
   * If a transfer, the account_id which the scheduled subtransaction transfers to
   * @return transferAccountId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public UUID getTransferAccountId() {
        return transferAccountId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRANSFER_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getTransferAccountId_JsonNullable() {
    return transferAccountId;
  }
  
  @JsonProperty(JSON_PROPERTY_TRANSFER_ACCOUNT_ID)
  public void setTransferAccountId_JsonNullable(JsonNullable<UUID> transferAccountId) {
    this.transferAccountId = transferAccountId;
  }

  public void setTransferAccountId(@jakarta.annotation.Nullable UUID transferAccountId) {
    this.transferAccountId = JsonNullable.<UUID>of(transferAccountId);
  }


  public ScheduledSubTransaction deleted(@jakarta.annotation.Nonnull Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

  /**
   * Whether or not the scheduled subtransaction has been deleted. Deleted scheduled subtransactions will only be included in delta requests.
   * @return deleted
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getDeleted() {
    return deleted;
  }


  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeleted(@jakarta.annotation.Nonnull Boolean deleted) {
    this.deleted = deleted;
  }


  /**
   * Return true if this ScheduledSubTransaction object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduledSubTransaction scheduledSubTransaction = (ScheduledSubTransaction) o;
    return Objects.equals(this.id, scheduledSubTransaction.id) &&
        Objects.equals(this.scheduledTransactionId, scheduledSubTransaction.scheduledTransactionId) &&
        Objects.equals(this.amount, scheduledSubTransaction.amount) &&
        equalsNullable(this.memo, scheduledSubTransaction.memo) &&
        equalsNullable(this.payeeId, scheduledSubTransaction.payeeId) &&
        equalsNullable(this.payeeName, scheduledSubTransaction.payeeName) &&
        equalsNullable(this.categoryId, scheduledSubTransaction.categoryId) &&
        equalsNullable(this.categoryName, scheduledSubTransaction.categoryName) &&
        equalsNullable(this.transferAccountId, scheduledSubTransaction.transferAccountId) &&
        Objects.equals(this.deleted, scheduledSubTransaction.deleted);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, scheduledTransactionId, amount, hashCodeNullable(memo), hashCodeNullable(payeeId), hashCodeNullable(payeeName), hashCodeNullable(categoryId), hashCodeNullable(categoryName), hashCodeNullable(transferAccountId), deleted);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduledSubTransaction {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    scheduledTransactionId: ").append(toIndentedString(scheduledTransactionId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    payeeId: ").append(toIndentedString(payeeId)).append("\n");
    sb.append("    payeeName: ").append(toIndentedString(payeeName)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    categoryName: ").append(toIndentedString(categoryName)).append("\n");
    sb.append("    transferAccountId: ").append(toIndentedString(transferAccountId)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `scheduled_transaction_id` to the URL query string
    if (getScheduledTransactionId() != null) {
      joiner.add(String.format("%sscheduled_transaction_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getScheduledTransactionId()))));
    }

    // add `amount` to the URL query string
    if (getAmount() != null) {
      joiner.add(String.format("%samount%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAmount()))));
    }

    // add `memo` to the URL query string
    if (getMemo() != null) {
      joiner.add(String.format("%smemo%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMemo()))));
    }

    // add `payee_id` to the URL query string
    if (getPayeeId() != null) {
      joiner.add(String.format("%spayee_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPayeeId()))));
    }

    // add `payee_name` to the URL query string
    if (getPayeeName() != null) {
      joiner.add(String.format("%spayee_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPayeeName()))));
    }

    // add `category_id` to the URL query string
    if (getCategoryId() != null) {
      joiner.add(String.format("%scategory_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCategoryId()))));
    }

    // add `category_name` to the URL query string
    if (getCategoryName() != null) {
      joiner.add(String.format("%scategory_name%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCategoryName()))));
    }

    // add `transfer_account_id` to the URL query string
    if (getTransferAccountId() != null) {
      joiner.add(String.format("%stransfer_account_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTransferAccountId()))));
    }

    // add `deleted` to the URL query string
    if (getDeleted() != null) {
      joiner.add(String.format("%sdeleted%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDeleted()))));
    }

    return joiner.toString();
  }
}

