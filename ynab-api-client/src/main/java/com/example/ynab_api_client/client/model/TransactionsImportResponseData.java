/*
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.75.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ynab_api_client.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.example.ynab_api_client.client.invoker.ApiClient;
/**
 * TransactionsImportResponseData
 */
@JsonPropertyOrder({
  TransactionsImportResponseData.JSON_PROPERTY_TRANSACTION_IDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-01T21:45:22.500220+02:00[Europe/Zurich]", comments = "Generator version: 7.14.0")
public class TransactionsImportResponseData {
  public static final String JSON_PROPERTY_TRANSACTION_IDS = "transaction_ids";
  @jakarta.annotation.Nonnull
  private List<String> transactionIds = new ArrayList<>();

  public TransactionsImportResponseData() { 
  }

  public TransactionsImportResponseData transactionIds(@jakarta.annotation.Nonnull List<String> transactionIds) {
    this.transactionIds = transactionIds;
    return this;
  }

  public TransactionsImportResponseData addTransactionIdsItem(String transactionIdsItem) {
    if (this.transactionIds == null) {
      this.transactionIds = new ArrayList<>();
    }
    this.transactionIds.add(transactionIdsItem);
    return this;
  }

  /**
   * The list of transaction ids that were imported.
   * @return transactionIds
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSACTION_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<String> getTransactionIds() {
    return transactionIds;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionIds(@jakarta.annotation.Nonnull List<String> transactionIds) {
    this.transactionIds = transactionIds;
  }


  /**
   * Return true if this TransactionsImportResponse_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionsImportResponseData transactionsImportResponseData = (TransactionsImportResponseData) o;
    return Objects.equals(this.transactionIds, transactionsImportResponseData.transactionIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionsImportResponseData {\n");
    sb.append("    transactionIds: ").append(toIndentedString(transactionIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `transaction_ids` to the URL query string
    if (getTransactionIds() != null) {
      for (int i = 0; i < getTransactionIds().size(); i++) {
        joiner.add(String.format("%stransaction_ids%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getTransactionIds().get(i)))));
      }
    }

    return joiner.toString();
  }
}

