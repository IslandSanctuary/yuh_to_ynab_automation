/*
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.75.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ynab_api_client.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.example.ynab_api_client.client.model.CategoryGroupWithCategories;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.example.ynab_api_client.client.invoker.ApiClient;
/**
 * CategoriesResponseData
 */
@JsonPropertyOrder({
  CategoriesResponseData.JSON_PROPERTY_CATEGORY_GROUPS,
  CategoriesResponseData.JSON_PROPERTY_SERVER_KNOWLEDGE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-01T21:45:22.500220+02:00[Europe/Zurich]", comments = "Generator version: 7.14.0")
public class CategoriesResponseData {
  public static final String JSON_PROPERTY_CATEGORY_GROUPS = "category_groups";
  @jakarta.annotation.Nonnull
  private List<CategoryGroupWithCategories> categoryGroups = new ArrayList<>();

  public static final String JSON_PROPERTY_SERVER_KNOWLEDGE = "server_knowledge";
  @jakarta.annotation.Nonnull
  private Long serverKnowledge;

  public CategoriesResponseData() { 
  }

  public CategoriesResponseData categoryGroups(@jakarta.annotation.Nonnull List<CategoryGroupWithCategories> categoryGroups) {
    this.categoryGroups = categoryGroups;
    return this;
  }

  public CategoriesResponseData addCategoryGroupsItem(CategoryGroupWithCategories categoryGroupsItem) {
    if (this.categoryGroups == null) {
      this.categoryGroups = new ArrayList<>();
    }
    this.categoryGroups.add(categoryGroupsItem);
    return this;
  }

  /**
   * Get categoryGroups
   * @return categoryGroups
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CATEGORY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<CategoryGroupWithCategories> getCategoryGroups() {
    return categoryGroups;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCategoryGroups(@jakarta.annotation.Nonnull List<CategoryGroupWithCategories> categoryGroups) {
    this.categoryGroups = categoryGroups;
  }


  public CategoriesResponseData serverKnowledge(@jakarta.annotation.Nonnull Long serverKnowledge) {
    this.serverKnowledge = serverKnowledge;
    return this;
  }

  /**
   * The knowledge of the server
   * @return serverKnowledge
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SERVER_KNOWLEDGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Long getServerKnowledge() {
    return serverKnowledge;
  }


  @JsonProperty(JSON_PROPERTY_SERVER_KNOWLEDGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setServerKnowledge(@jakarta.annotation.Nonnull Long serverKnowledge) {
    this.serverKnowledge = serverKnowledge;
  }


  /**
   * Return true if this CategoriesResponse_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CategoriesResponseData categoriesResponseData = (CategoriesResponseData) o;
    return Objects.equals(this.categoryGroups, categoriesResponseData.categoryGroups) &&
        Objects.equals(this.serverKnowledge, categoriesResponseData.serverKnowledge);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryGroups, serverKnowledge);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CategoriesResponseData {\n");
    sb.append("    categoryGroups: ").append(toIndentedString(categoryGroups)).append("\n");
    sb.append("    serverKnowledge: ").append(toIndentedString(serverKnowledge)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `category_groups` to the URL query string
    if (getCategoryGroups() != null) {
      for (int i = 0; i < getCategoryGroups().size(); i++) {
        if (getCategoryGroups().get(i) != null) {
          joiner.add(getCategoryGroups().get(i).toUrlQueryString(String.format("%scategory_groups%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `server_knowledge` to the URL query string
    if (getServerKnowledge() != null) {
      joiner.add(String.format("%sserver_knowledge%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getServerKnowledge()))));
    }

    return joiner.toString();
  }
}

