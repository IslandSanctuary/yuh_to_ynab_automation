/*
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.75.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ynab_api_client.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * The scheduled transaction frequency
 */
public enum ScheduledTransactionFrequency {
  
  NEVER("never"),
  
  DAILY("daily"),
  
  WEEKLY("weekly"),
  
  EVERY_OTHER_WEEK("everyOtherWeek"),
  
  TWICE_A_MONTH("twiceAMonth"),
  
  EVERY4_WEEKS("every4Weeks"),
  
  MONTHLY("monthly"),
  
  EVERY_OTHER_MONTH("everyOtherMonth"),
  
  EVERY3_MONTHS("every3Months"),
  
  EVERY4_MONTHS("every4Months"),
  
  TWICE_A_YEAR("twiceAYear"),
  
  YEARLY("yearly"),
  
  EVERY_OTHER_YEAR("everyOtherYear");

  private String value;

  ScheduledTransactionFrequency(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static ScheduledTransactionFrequency fromValue(String value) {
    for (ScheduledTransactionFrequency b : ScheduledTransactionFrequency.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }

}

