/*
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.75.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ynab_api_client.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.example.ynab_api_client.client.model.Account;
import com.example.ynab_api_client.client.model.Category;
import com.example.ynab_api_client.client.model.CategoryGroup;
import com.example.ynab_api_client.client.model.CurrencyFormat;
import com.example.ynab_api_client.client.model.DateFormat;
import com.example.ynab_api_client.client.model.MonthDetail;
import com.example.ynab_api_client.client.model.Payee;
import com.example.ynab_api_client.client.model.PayeeLocation;
import com.example.ynab_api_client.client.model.ScheduledSubTransaction;
import com.example.ynab_api_client.client.model.ScheduledTransactionSummary;
import com.example.ynab_api_client.client.model.SubTransaction;
import com.example.ynab_api_client.client.model.TransactionSummary;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.example.ynab_api_client.client.invoker.ApiClient;
/**
 * BudgetDetail
 */
@JsonPropertyOrder({
  BudgetDetail.JSON_PROPERTY_ID,
  BudgetDetail.JSON_PROPERTY_NAME,
  BudgetDetail.JSON_PROPERTY_LAST_MODIFIED_ON,
  BudgetDetail.JSON_PROPERTY_FIRST_MONTH,
  BudgetDetail.JSON_PROPERTY_LAST_MONTH,
  BudgetDetail.JSON_PROPERTY_DATE_FORMAT,
  BudgetDetail.JSON_PROPERTY_CURRENCY_FORMAT,
  BudgetDetail.JSON_PROPERTY_ACCOUNTS,
  BudgetDetail.JSON_PROPERTY_PAYEES,
  BudgetDetail.JSON_PROPERTY_PAYEE_LOCATIONS,
  BudgetDetail.JSON_PROPERTY_CATEGORY_GROUPS,
  BudgetDetail.JSON_PROPERTY_CATEGORIES,
  BudgetDetail.JSON_PROPERTY_MONTHS,
  BudgetDetail.JSON_PROPERTY_TRANSACTIONS,
  BudgetDetail.JSON_PROPERTY_SUBTRANSACTIONS,
  BudgetDetail.JSON_PROPERTY_SCHEDULED_TRANSACTIONS,
  BudgetDetail.JSON_PROPERTY_SCHEDULED_SUBTRANSACTIONS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-01T21:45:22.500220+02:00[Europe/Zurich]", comments = "Generator version: 7.14.0")
public class BudgetDetail {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_LAST_MODIFIED_ON = "last_modified_on";
  @jakarta.annotation.Nullable
  private OffsetDateTime lastModifiedOn;

  public static final String JSON_PROPERTY_FIRST_MONTH = "first_month";
  @jakarta.annotation.Nullable
  private LocalDate firstMonth;

  public static final String JSON_PROPERTY_LAST_MONTH = "last_month";
  @jakarta.annotation.Nullable
  private LocalDate lastMonth;

  public static final String JSON_PROPERTY_DATE_FORMAT = "date_format";
  private JsonNullable<DateFormat> dateFormat = JsonNullable.<DateFormat>undefined();

  public static final String JSON_PROPERTY_CURRENCY_FORMAT = "currency_format";
  private JsonNullable<CurrencyFormat> currencyFormat = JsonNullable.<CurrencyFormat>undefined();

  public static final String JSON_PROPERTY_ACCOUNTS = "accounts";
  @jakarta.annotation.Nullable
  private List<Account> accounts = new ArrayList<>();

  public static final String JSON_PROPERTY_PAYEES = "payees";
  @jakarta.annotation.Nullable
  private List<Payee> payees = new ArrayList<>();

  public static final String JSON_PROPERTY_PAYEE_LOCATIONS = "payee_locations";
  @jakarta.annotation.Nullable
  private List<PayeeLocation> payeeLocations = new ArrayList<>();

  public static final String JSON_PROPERTY_CATEGORY_GROUPS = "category_groups";
  @jakarta.annotation.Nullable
  private List<CategoryGroup> categoryGroups = new ArrayList<>();

  public static final String JSON_PROPERTY_CATEGORIES = "categories";
  @jakarta.annotation.Nullable
  private List<Category> categories = new ArrayList<>();

  public static final String JSON_PROPERTY_MONTHS = "months";
  @jakarta.annotation.Nullable
  private List<MonthDetail> months = new ArrayList<>();

  public static final String JSON_PROPERTY_TRANSACTIONS = "transactions";
  @jakarta.annotation.Nullable
  private List<TransactionSummary> transactions = new ArrayList<>();

  public static final String JSON_PROPERTY_SUBTRANSACTIONS = "subtransactions";
  @jakarta.annotation.Nullable
  private List<SubTransaction> subtransactions = new ArrayList<>();

  public static final String JSON_PROPERTY_SCHEDULED_TRANSACTIONS = "scheduled_transactions";
  @jakarta.annotation.Nullable
  private List<ScheduledTransactionSummary> scheduledTransactions = new ArrayList<>();

  public static final String JSON_PROPERTY_SCHEDULED_SUBTRANSACTIONS = "scheduled_subtransactions";
  @jakarta.annotation.Nullable
  private List<ScheduledSubTransaction> scheduledSubtransactions = new ArrayList<>();

  public BudgetDetail() { 
  }

  public BudgetDetail id(@jakarta.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public BudgetDetail name(@jakarta.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@jakarta.annotation.Nonnull String name) {
    this.name = name;
  }


  public BudgetDetail lastModifiedOn(@jakarta.annotation.Nullable OffsetDateTime lastModifiedOn) {
    this.lastModifiedOn = lastModifiedOn;
    return this;
  }

  /**
   * The last time any changes were made to the budget from either a web or mobile client
   * @return lastModifiedOn
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_MODIFIED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getLastModifiedOn() {
    return lastModifiedOn;
  }


  @JsonProperty(JSON_PROPERTY_LAST_MODIFIED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastModifiedOn(@jakarta.annotation.Nullable OffsetDateTime lastModifiedOn) {
    this.lastModifiedOn = lastModifiedOn;
  }


  public BudgetDetail firstMonth(@jakarta.annotation.Nullable LocalDate firstMonth) {
    this.firstMonth = firstMonth;
    return this;
  }

  /**
   * The earliest budget month
   * @return firstMonth
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public LocalDate getFirstMonth() {
    return firstMonth;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstMonth(@jakarta.annotation.Nullable LocalDate firstMonth) {
    this.firstMonth = firstMonth;
  }


  public BudgetDetail lastMonth(@jakarta.annotation.Nullable LocalDate lastMonth) {
    this.lastMonth = lastMonth;
    return this;
  }

  /**
   * The latest budget month
   * @return lastMonth
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public LocalDate getLastMonth() {
    return lastMonth;
  }


  @JsonProperty(JSON_PROPERTY_LAST_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastMonth(@jakarta.annotation.Nullable LocalDate lastMonth) {
    this.lastMonth = lastMonth;
  }


  public BudgetDetail dateFormat(@jakarta.annotation.Nullable DateFormat dateFormat) {
    this.dateFormat = JsonNullable.<DateFormat>of(dateFormat);
    return this;
  }

  /**
   * Get dateFormat
   * @return dateFormat
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public DateFormat getDateFormat() {
        return dateFormat.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DateFormat> getDateFormat_JsonNullable() {
    return dateFormat;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE_FORMAT)
  public void setDateFormat_JsonNullable(JsonNullable<DateFormat> dateFormat) {
    this.dateFormat = dateFormat;
  }

  public void setDateFormat(@jakarta.annotation.Nullable DateFormat dateFormat) {
    this.dateFormat = JsonNullable.<DateFormat>of(dateFormat);
  }


  public BudgetDetail currencyFormat(@jakarta.annotation.Nullable CurrencyFormat currencyFormat) {
    this.currencyFormat = JsonNullable.<CurrencyFormat>of(currencyFormat);
    return this;
  }

  /**
   * Get currencyFormat
   * @return currencyFormat
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public CurrencyFormat getCurrencyFormat() {
        return currencyFormat.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CurrencyFormat> getCurrencyFormat_JsonNullable() {
    return currencyFormat;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY_FORMAT)
  public void setCurrencyFormat_JsonNullable(JsonNullable<CurrencyFormat> currencyFormat) {
    this.currencyFormat = currencyFormat;
  }

  public void setCurrencyFormat(@jakarta.annotation.Nullable CurrencyFormat currencyFormat) {
    this.currencyFormat = JsonNullable.<CurrencyFormat>of(currencyFormat);
  }


  public BudgetDetail accounts(@jakarta.annotation.Nullable List<Account> accounts) {
    this.accounts = accounts;
    return this;
  }

  public BudgetDetail addAccountsItem(Account accountsItem) {
    if (this.accounts == null) {
      this.accounts = new ArrayList<>();
    }
    this.accounts.add(accountsItem);
    return this;
  }

  /**
   * Get accounts
   * @return accounts
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<Account> getAccounts() {
    return accounts;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccounts(@jakarta.annotation.Nullable List<Account> accounts) {
    this.accounts = accounts;
  }


  public BudgetDetail payees(@jakarta.annotation.Nullable List<Payee> payees) {
    this.payees = payees;
    return this;
  }

  public BudgetDetail addPayeesItem(Payee payeesItem) {
    if (this.payees == null) {
      this.payees = new ArrayList<>();
    }
    this.payees.add(payeesItem);
    return this;
  }

  /**
   * Get payees
   * @return payees
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<Payee> getPayees() {
    return payees;
  }


  @JsonProperty(JSON_PROPERTY_PAYEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayees(@jakarta.annotation.Nullable List<Payee> payees) {
    this.payees = payees;
  }


  public BudgetDetail payeeLocations(@jakarta.annotation.Nullable List<PayeeLocation> payeeLocations) {
    this.payeeLocations = payeeLocations;
    return this;
  }

  public BudgetDetail addPayeeLocationsItem(PayeeLocation payeeLocationsItem) {
    if (this.payeeLocations == null) {
      this.payeeLocations = new ArrayList<>();
    }
    this.payeeLocations.add(payeeLocationsItem);
    return this;
  }

  /**
   * Get payeeLocations
   * @return payeeLocations
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYEE_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<PayeeLocation> getPayeeLocations() {
    return payeeLocations;
  }


  @JsonProperty(JSON_PROPERTY_PAYEE_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayeeLocations(@jakarta.annotation.Nullable List<PayeeLocation> payeeLocations) {
    this.payeeLocations = payeeLocations;
  }


  public BudgetDetail categoryGroups(@jakarta.annotation.Nullable List<CategoryGroup> categoryGroups) {
    this.categoryGroups = categoryGroups;
    return this;
  }

  public BudgetDetail addCategoryGroupsItem(CategoryGroup categoryGroupsItem) {
    if (this.categoryGroups == null) {
      this.categoryGroups = new ArrayList<>();
    }
    this.categoryGroups.add(categoryGroupsItem);
    return this;
  }

  /**
   * Get categoryGroups
   * @return categoryGroups
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<CategoryGroup> getCategoryGroups() {
    return categoryGroups;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategoryGroups(@jakarta.annotation.Nullable List<CategoryGroup> categoryGroups) {
    this.categoryGroups = categoryGroups;
  }


  public BudgetDetail categories(@jakarta.annotation.Nullable List<Category> categories) {
    this.categories = categories;
    return this;
  }

  public BudgetDetail addCategoriesItem(Category categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

  /**
   * Get categories
   * @return categories
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<Category> getCategories() {
    return categories;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategories(@jakarta.annotation.Nullable List<Category> categories) {
    this.categories = categories;
  }


  public BudgetDetail months(@jakarta.annotation.Nullable List<MonthDetail> months) {
    this.months = months;
    return this;
  }

  public BudgetDetail addMonthsItem(MonthDetail monthsItem) {
    if (this.months == null) {
      this.months = new ArrayList<>();
    }
    this.months.add(monthsItem);
    return this;
  }

  /**
   * Get months
   * @return months
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MONTHS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<MonthDetail> getMonths() {
    return months;
  }


  @JsonProperty(JSON_PROPERTY_MONTHS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMonths(@jakarta.annotation.Nullable List<MonthDetail> months) {
    this.months = months;
  }


  public BudgetDetail transactions(@jakarta.annotation.Nullable List<TransactionSummary> transactions) {
    this.transactions = transactions;
    return this;
  }

  public BudgetDetail addTransactionsItem(TransactionSummary transactionsItem) {
    if (this.transactions == null) {
      this.transactions = new ArrayList<>();
    }
    this.transactions.add(transactionsItem);
    return this;
  }

  /**
   * Get transactions
   * @return transactions
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<TransactionSummary> getTransactions() {
    return transactions;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactions(@jakarta.annotation.Nullable List<TransactionSummary> transactions) {
    this.transactions = transactions;
  }


  public BudgetDetail subtransactions(@jakarta.annotation.Nullable List<SubTransaction> subtransactions) {
    this.subtransactions = subtransactions;
    return this;
  }

  public BudgetDetail addSubtransactionsItem(SubTransaction subtransactionsItem) {
    if (this.subtransactions == null) {
      this.subtransactions = new ArrayList<>();
    }
    this.subtransactions.add(subtransactionsItem);
    return this;
  }

  /**
   * Get subtransactions
   * @return subtransactions
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBTRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<SubTransaction> getSubtransactions() {
    return subtransactions;
  }


  @JsonProperty(JSON_PROPERTY_SUBTRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubtransactions(@jakarta.annotation.Nullable List<SubTransaction> subtransactions) {
    this.subtransactions = subtransactions;
  }


  public BudgetDetail scheduledTransactions(@jakarta.annotation.Nullable List<ScheduledTransactionSummary> scheduledTransactions) {
    this.scheduledTransactions = scheduledTransactions;
    return this;
  }

  public BudgetDetail addScheduledTransactionsItem(ScheduledTransactionSummary scheduledTransactionsItem) {
    if (this.scheduledTransactions == null) {
      this.scheduledTransactions = new ArrayList<>();
    }
    this.scheduledTransactions.add(scheduledTransactionsItem);
    return this;
  }

  /**
   * Get scheduledTransactions
   * @return scheduledTransactions
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCHEDULED_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<ScheduledTransactionSummary> getScheduledTransactions() {
    return scheduledTransactions;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULED_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduledTransactions(@jakarta.annotation.Nullable List<ScheduledTransactionSummary> scheduledTransactions) {
    this.scheduledTransactions = scheduledTransactions;
  }


  public BudgetDetail scheduledSubtransactions(@jakarta.annotation.Nullable List<ScheduledSubTransaction> scheduledSubtransactions) {
    this.scheduledSubtransactions = scheduledSubtransactions;
    return this;
  }

  public BudgetDetail addScheduledSubtransactionsItem(ScheduledSubTransaction scheduledSubtransactionsItem) {
    if (this.scheduledSubtransactions == null) {
      this.scheduledSubtransactions = new ArrayList<>();
    }
    this.scheduledSubtransactions.add(scheduledSubtransactionsItem);
    return this;
  }

  /**
   * Get scheduledSubtransactions
   * @return scheduledSubtransactions
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCHEDULED_SUBTRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<ScheduledSubTransaction> getScheduledSubtransactions() {
    return scheduledSubtransactions;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULED_SUBTRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduledSubtransactions(@jakarta.annotation.Nullable List<ScheduledSubTransaction> scheduledSubtransactions) {
    this.scheduledSubtransactions = scheduledSubtransactions;
  }


  /**
   * Return true if this BudgetDetail object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BudgetDetail budgetDetail = (BudgetDetail) o;
    return Objects.equals(this.id, budgetDetail.id) &&
        Objects.equals(this.name, budgetDetail.name) &&
        Objects.equals(this.lastModifiedOn, budgetDetail.lastModifiedOn) &&
        Objects.equals(this.firstMonth, budgetDetail.firstMonth) &&
        Objects.equals(this.lastMonth, budgetDetail.lastMonth) &&
        equalsNullable(this.dateFormat, budgetDetail.dateFormat) &&
        equalsNullable(this.currencyFormat, budgetDetail.currencyFormat) &&
        Objects.equals(this.accounts, budgetDetail.accounts) &&
        Objects.equals(this.payees, budgetDetail.payees) &&
        Objects.equals(this.payeeLocations, budgetDetail.payeeLocations) &&
        Objects.equals(this.categoryGroups, budgetDetail.categoryGroups) &&
        Objects.equals(this.categories, budgetDetail.categories) &&
        Objects.equals(this.months, budgetDetail.months) &&
        Objects.equals(this.transactions, budgetDetail.transactions) &&
        Objects.equals(this.subtransactions, budgetDetail.subtransactions) &&
        Objects.equals(this.scheduledTransactions, budgetDetail.scheduledTransactions) &&
        Objects.equals(this.scheduledSubtransactions, budgetDetail.scheduledSubtransactions);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, lastModifiedOn, firstMonth, lastMonth, hashCodeNullable(dateFormat), hashCodeNullable(currencyFormat), accounts, payees, payeeLocations, categoryGroups, categories, months, transactions, subtransactions, scheduledTransactions, scheduledSubtransactions);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BudgetDetail {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    lastModifiedOn: ").append(toIndentedString(lastModifiedOn)).append("\n");
    sb.append("    firstMonth: ").append(toIndentedString(firstMonth)).append("\n");
    sb.append("    lastMonth: ").append(toIndentedString(lastMonth)).append("\n");
    sb.append("    dateFormat: ").append(toIndentedString(dateFormat)).append("\n");
    sb.append("    currencyFormat: ").append(toIndentedString(currencyFormat)).append("\n");
    sb.append("    accounts: ").append(toIndentedString(accounts)).append("\n");
    sb.append("    payees: ").append(toIndentedString(payees)).append("\n");
    sb.append("    payeeLocations: ").append(toIndentedString(payeeLocations)).append("\n");
    sb.append("    categoryGroups: ").append(toIndentedString(categoryGroups)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    months: ").append(toIndentedString(months)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    subtransactions: ").append(toIndentedString(subtransactions)).append("\n");
    sb.append("    scheduledTransactions: ").append(toIndentedString(scheduledTransactions)).append("\n");
    sb.append("    scheduledSubtransactions: ").append(toIndentedString(scheduledSubtransactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `last_modified_on` to the URL query string
    if (getLastModifiedOn() != null) {
      joiner.add(String.format("%slast_modified_on%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLastModifiedOn()))));
    }

    // add `first_month` to the URL query string
    if (getFirstMonth() != null) {
      joiner.add(String.format("%sfirst_month%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFirstMonth()))));
    }

    // add `last_month` to the URL query string
    if (getLastMonth() != null) {
      joiner.add(String.format("%slast_month%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLastMonth()))));
    }

    // add `date_format` to the URL query string
    if (getDateFormat() != null) {
      joiner.add(getDateFormat().toUrlQueryString(prefix + "date_format" + suffix));
    }

    // add `currency_format` to the URL query string
    if (getCurrencyFormat() != null) {
      joiner.add(getCurrencyFormat().toUrlQueryString(prefix + "currency_format" + suffix));
    }

    // add `accounts` to the URL query string
    if (getAccounts() != null) {
      for (int i = 0; i < getAccounts().size(); i++) {
        if (getAccounts().get(i) != null) {
          joiner.add(getAccounts().get(i).toUrlQueryString(String.format("%saccounts%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `payees` to the URL query string
    if (getPayees() != null) {
      for (int i = 0; i < getPayees().size(); i++) {
        if (getPayees().get(i) != null) {
          joiner.add(getPayees().get(i).toUrlQueryString(String.format("%spayees%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `payee_locations` to the URL query string
    if (getPayeeLocations() != null) {
      for (int i = 0; i < getPayeeLocations().size(); i++) {
        if (getPayeeLocations().get(i) != null) {
          joiner.add(getPayeeLocations().get(i).toUrlQueryString(String.format("%spayee_locations%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `category_groups` to the URL query string
    if (getCategoryGroups() != null) {
      for (int i = 0; i < getCategoryGroups().size(); i++) {
        if (getCategoryGroups().get(i) != null) {
          joiner.add(getCategoryGroups().get(i).toUrlQueryString(String.format("%scategory_groups%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `categories` to the URL query string
    if (getCategories() != null) {
      for (int i = 0; i < getCategories().size(); i++) {
        if (getCategories().get(i) != null) {
          joiner.add(getCategories().get(i).toUrlQueryString(String.format("%scategories%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `months` to the URL query string
    if (getMonths() != null) {
      for (int i = 0; i < getMonths().size(); i++) {
        if (getMonths().get(i) != null) {
          joiner.add(getMonths().get(i).toUrlQueryString(String.format("%smonths%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `transactions` to the URL query string
    if (getTransactions() != null) {
      for (int i = 0; i < getTransactions().size(); i++) {
        if (getTransactions().get(i) != null) {
          joiner.add(getTransactions().get(i).toUrlQueryString(String.format("%stransactions%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `subtransactions` to the URL query string
    if (getSubtransactions() != null) {
      for (int i = 0; i < getSubtransactions().size(); i++) {
        if (getSubtransactions().get(i) != null) {
          joiner.add(getSubtransactions().get(i).toUrlQueryString(String.format("%ssubtransactions%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `scheduled_transactions` to the URL query string
    if (getScheduledTransactions() != null) {
      for (int i = 0; i < getScheduledTransactions().size(); i++) {
        if (getScheduledTransactions().get(i) != null) {
          joiner.add(getScheduledTransactions().get(i).toUrlQueryString(String.format("%sscheduled_transactions%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `scheduled_subtransactions` to the URL query string
    if (getScheduledSubtransactions() != null) {
      for (int i = 0; i < getScheduledSubtransactions().size(); i++) {
        if (getScheduledSubtransactions().get(i) != null) {
          joiner.add(getScheduledSubtransactions().get(i).toUrlQueryString(String.format("%sscheduled_subtransactions%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

