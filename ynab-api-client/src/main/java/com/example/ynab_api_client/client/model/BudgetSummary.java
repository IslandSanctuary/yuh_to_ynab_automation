/*
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.75.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ynab_api_client.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.example.ynab_api_client.client.model.Account;
import com.example.ynab_api_client.client.model.CurrencyFormat;
import com.example.ynab_api_client.client.model.DateFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.example.ynab_api_client.client.invoker.ApiClient;
/**
 * BudgetSummary
 */
@JsonPropertyOrder({
  BudgetSummary.JSON_PROPERTY_ID,
  BudgetSummary.JSON_PROPERTY_NAME,
  BudgetSummary.JSON_PROPERTY_LAST_MODIFIED_ON,
  BudgetSummary.JSON_PROPERTY_FIRST_MONTH,
  BudgetSummary.JSON_PROPERTY_LAST_MONTH,
  BudgetSummary.JSON_PROPERTY_DATE_FORMAT,
  BudgetSummary.JSON_PROPERTY_CURRENCY_FORMAT,
  BudgetSummary.JSON_PROPERTY_ACCOUNTS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-01T21:45:22.500220+02:00[Europe/Zurich]", comments = "Generator version: 7.14.0")
public class BudgetSummary {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_LAST_MODIFIED_ON = "last_modified_on";
  @jakarta.annotation.Nullable
  private OffsetDateTime lastModifiedOn;

  public static final String JSON_PROPERTY_FIRST_MONTH = "first_month";
  @jakarta.annotation.Nullable
  private LocalDate firstMonth;

  public static final String JSON_PROPERTY_LAST_MONTH = "last_month";
  @jakarta.annotation.Nullable
  private LocalDate lastMonth;

  public static final String JSON_PROPERTY_DATE_FORMAT = "date_format";
  private JsonNullable<DateFormat> dateFormat = JsonNullable.<DateFormat>undefined();

  public static final String JSON_PROPERTY_CURRENCY_FORMAT = "currency_format";
  private JsonNullable<CurrencyFormat> currencyFormat = JsonNullable.<CurrencyFormat>undefined();

  public static final String JSON_PROPERTY_ACCOUNTS = "accounts";
  @jakarta.annotation.Nullable
  private List<Account> accounts = new ArrayList<>();

  public BudgetSummary() { 
  }

  public BudgetSummary id(@jakarta.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public BudgetSummary name(@jakarta.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@jakarta.annotation.Nonnull String name) {
    this.name = name;
  }


  public BudgetSummary lastModifiedOn(@jakarta.annotation.Nullable OffsetDateTime lastModifiedOn) {
    this.lastModifiedOn = lastModifiedOn;
    return this;
  }

  /**
   * The last time any changes were made to the budget from either a web or mobile client
   * @return lastModifiedOn
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_MODIFIED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getLastModifiedOn() {
    return lastModifiedOn;
  }


  @JsonProperty(JSON_PROPERTY_LAST_MODIFIED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastModifiedOn(@jakarta.annotation.Nullable OffsetDateTime lastModifiedOn) {
    this.lastModifiedOn = lastModifiedOn;
  }


  public BudgetSummary firstMonth(@jakarta.annotation.Nullable LocalDate firstMonth) {
    this.firstMonth = firstMonth;
    return this;
  }

  /**
   * The earliest budget month
   * @return firstMonth
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public LocalDate getFirstMonth() {
    return firstMonth;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstMonth(@jakarta.annotation.Nullable LocalDate firstMonth) {
    this.firstMonth = firstMonth;
  }


  public BudgetSummary lastMonth(@jakarta.annotation.Nullable LocalDate lastMonth) {
    this.lastMonth = lastMonth;
    return this;
  }

  /**
   * The latest budget month
   * @return lastMonth
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public LocalDate getLastMonth() {
    return lastMonth;
  }


  @JsonProperty(JSON_PROPERTY_LAST_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastMonth(@jakarta.annotation.Nullable LocalDate lastMonth) {
    this.lastMonth = lastMonth;
  }


  public BudgetSummary dateFormat(@jakarta.annotation.Nullable DateFormat dateFormat) {
    this.dateFormat = JsonNullable.<DateFormat>of(dateFormat);
    return this;
  }

  /**
   * Get dateFormat
   * @return dateFormat
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public DateFormat getDateFormat() {
        return dateFormat.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DateFormat> getDateFormat_JsonNullable() {
    return dateFormat;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE_FORMAT)
  public void setDateFormat_JsonNullable(JsonNullable<DateFormat> dateFormat) {
    this.dateFormat = dateFormat;
  }

  public void setDateFormat(@jakarta.annotation.Nullable DateFormat dateFormat) {
    this.dateFormat = JsonNullable.<DateFormat>of(dateFormat);
  }


  public BudgetSummary currencyFormat(@jakarta.annotation.Nullable CurrencyFormat currencyFormat) {
    this.currencyFormat = JsonNullable.<CurrencyFormat>of(currencyFormat);
    return this;
  }

  /**
   * Get currencyFormat
   * @return currencyFormat
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public CurrencyFormat getCurrencyFormat() {
        return currencyFormat.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CurrencyFormat> getCurrencyFormat_JsonNullable() {
    return currencyFormat;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY_FORMAT)
  public void setCurrencyFormat_JsonNullable(JsonNullable<CurrencyFormat> currencyFormat) {
    this.currencyFormat = currencyFormat;
  }

  public void setCurrencyFormat(@jakarta.annotation.Nullable CurrencyFormat currencyFormat) {
    this.currencyFormat = JsonNullable.<CurrencyFormat>of(currencyFormat);
  }


  public BudgetSummary accounts(@jakarta.annotation.Nullable List<Account> accounts) {
    this.accounts = accounts;
    return this;
  }

  public BudgetSummary addAccountsItem(Account accountsItem) {
    if (this.accounts == null) {
      this.accounts = new ArrayList<>();
    }
    this.accounts.add(accountsItem);
    return this;
  }

  /**
   * The budget accounts (only included if &#x60;include_accounts&#x3D;true&#x60; specified as query parameter)
   * @return accounts
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<Account> getAccounts() {
    return accounts;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccounts(@jakarta.annotation.Nullable List<Account> accounts) {
    this.accounts = accounts;
  }


  /**
   * Return true if this BudgetSummary object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BudgetSummary budgetSummary = (BudgetSummary) o;
    return Objects.equals(this.id, budgetSummary.id) &&
        Objects.equals(this.name, budgetSummary.name) &&
        Objects.equals(this.lastModifiedOn, budgetSummary.lastModifiedOn) &&
        Objects.equals(this.firstMonth, budgetSummary.firstMonth) &&
        Objects.equals(this.lastMonth, budgetSummary.lastMonth) &&
        equalsNullable(this.dateFormat, budgetSummary.dateFormat) &&
        equalsNullable(this.currencyFormat, budgetSummary.currencyFormat) &&
        Objects.equals(this.accounts, budgetSummary.accounts);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, lastModifiedOn, firstMonth, lastMonth, hashCodeNullable(dateFormat), hashCodeNullable(currencyFormat), accounts);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BudgetSummary {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    lastModifiedOn: ").append(toIndentedString(lastModifiedOn)).append("\n");
    sb.append("    firstMonth: ").append(toIndentedString(firstMonth)).append("\n");
    sb.append("    lastMonth: ").append(toIndentedString(lastMonth)).append("\n");
    sb.append("    dateFormat: ").append(toIndentedString(dateFormat)).append("\n");
    sb.append("    currencyFormat: ").append(toIndentedString(currencyFormat)).append("\n");
    sb.append("    accounts: ").append(toIndentedString(accounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `last_modified_on` to the URL query string
    if (getLastModifiedOn() != null) {
      joiner.add(String.format("%slast_modified_on%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLastModifiedOn()))));
    }

    // add `first_month` to the URL query string
    if (getFirstMonth() != null) {
      joiner.add(String.format("%sfirst_month%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFirstMonth()))));
    }

    // add `last_month` to the URL query string
    if (getLastMonth() != null) {
      joiner.add(String.format("%slast_month%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLastMonth()))));
    }

    // add `date_format` to the URL query string
    if (getDateFormat() != null) {
      joiner.add(getDateFormat().toUrlQueryString(prefix + "date_format" + suffix));
    }

    // add `currency_format` to the URL query string
    if (getCurrencyFormat() != null) {
      joiner.add(getCurrencyFormat().toUrlQueryString(prefix + "currency_format" + suffix));
    }

    // add `accounts` to the URL query string
    if (getAccounts() != null) {
      for (int i = 0; i < getAccounts().size(); i++) {
        if (getAccounts().get(i) != null) {
          joiner.add(getAccounts().get(i).toUrlQueryString(String.format("%saccounts%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

