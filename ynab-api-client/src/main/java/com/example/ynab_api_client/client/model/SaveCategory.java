/*
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.75.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ynab_api_client.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.example.ynab_api_client.client.invoker.ApiClient;
/**
 * SaveCategory
 */
@JsonPropertyOrder({
  SaveCategory.JSON_PROPERTY_NAME,
  SaveCategory.JSON_PROPERTY_NOTE,
  SaveCategory.JSON_PROPERTY_CATEGORY_GROUP_ID,
  SaveCategory.JSON_PROPERTY_GOAL_TARGET
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-01T21:45:22.500220+02:00[Europe/Zurich]", comments = "Generator version: 7.14.0")
public class SaveCategory {
  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NOTE = "note";
  private JsonNullable<String> note = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CATEGORY_GROUP_ID = "category_group_id";
  @jakarta.annotation.Nullable
  private UUID categoryGroupId;

  public static final String JSON_PROPERTY_GOAL_TARGET = "goal_target";
  private JsonNullable<Long> goalTarget = JsonNullable.<Long>undefined();

  public SaveCategory() { 
  }

  public SaveCategory name(@jakarta.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public SaveCategory note(@jakarta.annotation.Nullable String note) {
    this.note = JsonNullable.<String>of(note);
    return this;
  }

  /**
   * Get note
   * @return note
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getNote() {
        return note.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNote_JsonNullable() {
    return note;
  }
  
  @JsonProperty(JSON_PROPERTY_NOTE)
  public void setNote_JsonNullable(JsonNullable<String> note) {
    this.note = note;
  }

  public void setNote(@jakarta.annotation.Nullable String note) {
    this.note = JsonNullable.<String>of(note);
  }


  public SaveCategory categoryGroupId(@jakarta.annotation.Nullable UUID categoryGroupId) {
    this.categoryGroupId = categoryGroupId;
    return this;
  }

  /**
   * Get categoryGroupId
   * @return categoryGroupId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getCategoryGroupId() {
    return categoryGroupId;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategoryGroupId(@jakarta.annotation.Nullable UUID categoryGroupId) {
    this.categoryGroupId = categoryGroupId;
  }


  public SaveCategory goalTarget(@jakarta.annotation.Nullable Long goalTarget) {
    this.goalTarget = JsonNullable.<Long>of(goalTarget);
    return this;
  }

  /**
   * The goal target amount in milliunits format.  This amount can only be changed if the category already has a configured goal (goal_type !&#x3D; null).
   * @return goalTarget
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public Long getGoalTarget() {
        return goalTarget.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GOAL_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getGoalTarget_JsonNullable() {
    return goalTarget;
  }
  
  @JsonProperty(JSON_PROPERTY_GOAL_TARGET)
  public void setGoalTarget_JsonNullable(JsonNullable<Long> goalTarget) {
    this.goalTarget = goalTarget;
  }

  public void setGoalTarget(@jakarta.annotation.Nullable Long goalTarget) {
    this.goalTarget = JsonNullable.<Long>of(goalTarget);
  }


  /**
   * Return true if this SaveCategory object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaveCategory saveCategory = (SaveCategory) o;
    return equalsNullable(this.name, saveCategory.name) &&
        equalsNullable(this.note, saveCategory.note) &&
        Objects.equals(this.categoryGroupId, saveCategory.categoryGroupId) &&
        equalsNullable(this.goalTarget, saveCategory.goalTarget);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(name), hashCodeNullable(note), categoryGroupId, hashCodeNullable(goalTarget));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaveCategory {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    categoryGroupId: ").append(toIndentedString(categoryGroupId)).append("\n");
    sb.append("    goalTarget: ").append(toIndentedString(goalTarget)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `note` to the URL query string
    if (getNote() != null) {
      joiner.add(String.format("%snote%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getNote()))));
    }

    // add `category_group_id` to the URL query string
    if (getCategoryGroupId() != null) {
      joiner.add(String.format("%scategory_group_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCategoryGroupId()))));
    }

    // add `goal_target` to the URL query string
    if (getGoalTarget() != null) {
      joiner.add(String.format("%sgoal_target%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getGoalTarget()))));
    }

    return joiner.toString();
  }
}

