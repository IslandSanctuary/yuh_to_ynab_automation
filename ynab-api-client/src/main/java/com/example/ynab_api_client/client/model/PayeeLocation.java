/*
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.75.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ynab_api_client.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.example.ynab_api_client.client.invoker.ApiClient;
/**
 * PayeeLocation
 */
@JsonPropertyOrder({
  PayeeLocation.JSON_PROPERTY_ID,
  PayeeLocation.JSON_PROPERTY_PAYEE_ID,
  PayeeLocation.JSON_PROPERTY_LATITUDE,
  PayeeLocation.JSON_PROPERTY_LONGITUDE,
  PayeeLocation.JSON_PROPERTY_DELETED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-01T21:45:22.500220+02:00[Europe/Zurich]", comments = "Generator version: 7.14.0")
public class PayeeLocation {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_PAYEE_ID = "payee_id";
  @jakarta.annotation.Nonnull
  private UUID payeeId;

  public static final String JSON_PROPERTY_LATITUDE = "latitude";
  @jakarta.annotation.Nonnull
  private String latitude;

  public static final String JSON_PROPERTY_LONGITUDE = "longitude";
  @jakarta.annotation.Nonnull
  private String longitude;

  public static final String JSON_PROPERTY_DELETED = "deleted";
  @jakarta.annotation.Nonnull
  private Boolean deleted;

  public PayeeLocation() { 
  }

  public PayeeLocation id(@jakarta.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public PayeeLocation payeeId(@jakarta.annotation.Nonnull UUID payeeId) {
    this.payeeId = payeeId;
    return this;
  }

  /**
   * Get payeeId
   * @return payeeId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAYEE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getPayeeId() {
    return payeeId;
  }


  @JsonProperty(JSON_PROPERTY_PAYEE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayeeId(@jakarta.annotation.Nonnull UUID payeeId) {
    this.payeeId = payeeId;
  }


  public PayeeLocation latitude(@jakarta.annotation.Nonnull String latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * Get latitude
   * @return latitude
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LATITUDE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getLatitude() {
    return latitude;
  }


  @JsonProperty(JSON_PROPERTY_LATITUDE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLatitude(@jakarta.annotation.Nonnull String latitude) {
    this.latitude = latitude;
  }


  public PayeeLocation longitude(@jakarta.annotation.Nonnull String longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * Get longitude
   * @return longitude
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LONGITUDE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getLongitude() {
    return longitude;
  }


  @JsonProperty(JSON_PROPERTY_LONGITUDE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLongitude(@jakarta.annotation.Nonnull String longitude) {
    this.longitude = longitude;
  }


  public PayeeLocation deleted(@jakarta.annotation.Nonnull Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

  /**
   * Whether or not the payee location has been deleted.  Deleted payee locations will only be included in delta requests.
   * @return deleted
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getDeleted() {
    return deleted;
  }


  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeleted(@jakarta.annotation.Nonnull Boolean deleted) {
    this.deleted = deleted;
  }


  /**
   * Return true if this PayeeLocation object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayeeLocation payeeLocation = (PayeeLocation) o;
    return Objects.equals(this.id, payeeLocation.id) &&
        Objects.equals(this.payeeId, payeeLocation.payeeId) &&
        Objects.equals(this.latitude, payeeLocation.latitude) &&
        Objects.equals(this.longitude, payeeLocation.longitude) &&
        Objects.equals(this.deleted, payeeLocation.deleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, payeeId, latitude, longitude, deleted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayeeLocation {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    payeeId: ").append(toIndentedString(payeeId)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `payee_id` to the URL query string
    if (getPayeeId() != null) {
      joiner.add(String.format("%spayee_id%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPayeeId()))));
    }

    // add `latitude` to the URL query string
    if (getLatitude() != null) {
      joiner.add(String.format("%slatitude%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLatitude()))));
    }

    // add `longitude` to the URL query string
    if (getLongitude() != null) {
      joiner.add(String.format("%slongitude%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLongitude()))));
    }

    // add `deleted` to the URL query string
    if (getDeleted() != null) {
      joiner.add(String.format("%sdeleted%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDeleted()))));
    }

    return joiner.toString();
  }
}

