/*
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.75.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ynab_api_client.client.model;

import com.example.ynab_api_client.client.model.Category;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CategoryGroupWithCategories
 */
class CategoryGroupWithCategoriesTest {
    private final CategoryGroupWithCategories model = new CategoryGroupWithCategories();

    /**
     * Model tests for CategoryGroupWithCategories
     */
    @Test
    void testCategoryGroupWithCategories() {
        // TODO: test CategoryGroupWithCategories
    }

    /**
     * Test the property 'id'
     */
    @Test
    void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'hidden'
     */
    @Test
    void hiddenTest() {
        // TODO: test hidden
    }

    /**
     * Test the property 'deleted'
     */
    @Test
    void deletedTest() {
        // TODO: test deleted
    }

    /**
     * Test the property 'categories'
     */
    @Test
    void categoriesTest() {
        // TODO: test categories
    }

}
