/*
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.75.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.ynab_api_client.client.model;

import com.example.ynab_api_client.client.model.AccountType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Account
 */
class AccountTest {
    private final Account model = new Account();

    /**
     * Model tests for Account
     */
    @Test
    void testAccount() {
        // TODO: test Account
    }

    /**
     * Test the property 'id'
     */
    @Test
    void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'type'
     */
    @Test
    void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'onBudget'
     */
    @Test
    void onBudgetTest() {
        // TODO: test onBudget
    }

    /**
     * Test the property 'closed'
     */
    @Test
    void closedTest() {
        // TODO: test closed
    }

    /**
     * Test the property 'note'
     */
    @Test
    void noteTest() {
        // TODO: test note
    }

    /**
     * Test the property 'balance'
     */
    @Test
    void balanceTest() {
        // TODO: test balance
    }

    /**
     * Test the property 'clearedBalance'
     */
    @Test
    void clearedBalanceTest() {
        // TODO: test clearedBalance
    }

    /**
     * Test the property 'unclearedBalance'
     */
    @Test
    void unclearedBalanceTest() {
        // TODO: test unclearedBalance
    }

    /**
     * Test the property 'transferPayeeId'
     */
    @Test
    void transferPayeeIdTest() {
        // TODO: test transferPayeeId
    }

    /**
     * Test the property 'directImportLinked'
     */
    @Test
    void directImportLinkedTest() {
        // TODO: test directImportLinked
    }

    /**
     * Test the property 'directImportInError'
     */
    @Test
    void directImportInErrorTest() {
        // TODO: test directImportInError
    }

    /**
     * Test the property 'lastReconciledAt'
     */
    @Test
    void lastReconciledAtTest() {
        // TODO: test lastReconciledAt
    }

    /**
     * Test the property 'debtOriginalBalance'
     */
    @Test
    void debtOriginalBalanceTest() {
        // TODO: test debtOriginalBalance
    }

    /**
     * Test the property 'debtInterestRates'
     */
    @Test
    void debtInterestRatesTest() {
        // TODO: test debtInterestRates
    }

    /**
     * Test the property 'debtMinimumPayments'
     */
    @Test
    void debtMinimumPaymentsTest() {
        // TODO: test debtMinimumPayments
    }

    /**
     * Test the property 'debtEscrowAmounts'
     */
    @Test
    void debtEscrowAmountsTest() {
        // TODO: test debtEscrowAmounts
    }

    /**
     * Test the property 'deleted'
     */
    @Test
    void deletedTest() {
        // TODO: test deleted
    }

}
